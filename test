$group = "Sec-NoPicture"
$members = Get-ADGroupMember -Identity $group -Recursive | Select-Object -ExpandProperty SamAccountName

# If the user already has an image, 
# we will need to delete it before getting a new one
If ($members -contains $user) {
  Write-Host "Removing user image for $user"

  Get-ADUser -Identity $user | Set-ADUser -Clear thumbnailphoto
  Remove-UserPhoto -Identity $user -Confirm:$false
}

# Now lets get the new image for our user
$baseUrl = "https://xalfile.thg.dk/api/xalfile/Personnel/Photo/"
$fallbackImage = $baseUrl + "sca"
$locatePath = "C:\_thansen\picture\" + $user + ".jpg"

$WebClient = New-Object System.Net.WebClient

# Lets see if we have an image for the user on the server
Try
{
  Write-Host "Trying to get user image if it exists ($user)"

  $WebClient.DownloadFile($baseUrl + $user, $locatePath)
}
# If no image was to find we will give the user the fallback image
Catch
{
  Write-Host "Image did not exist so lets get the fallback one"
  
  $WebClient.DownloadFile($fallbackImage, $locatePath)
}

# Now lets save the image to the user AD
Write-Host "Adding the image to ther users AD"

$userImage = [byte[]](Get-Content $locatePath -Encoding byte)

Set-ADUser $user -Replace @{thumbnailPhoto=$userImage}
Set-UserPhoto -Identity $user -Confirm:$false -PictureData ([System.IO.File]::ReadAllBytes("$locatePath"))
